#originalFilePath=path/to/default.json
#targetLanguage=German

########################################################################
# Run modes
########################################################################

# Given a path to the original file (to be translated) and a target file,
# the SYNC run mode will synchronize the target file with the original file.
# If the target file doesn't exist yet, it will be created.
# If new keys have been added in original, the translated file will be updated with the new keys.
# New keys will be marked so that the translation step can easily identify them.
# Order of keys will be the same as in original file.
#runModes=SYNC

# The REVALIDATE run mode will revalidate the target file with the current
# validation configuration and adds <ERROR> tags to existing translations
# that do not pass the validation
#runModes=REVALIDATE

# Translate all texts that contain <ERROR> or <MISSING> tags.
# The translated texts will replace the original texts in the target file.
#runModes=TRANSLATE

# REFORMAT will sync all formatting and comments from the original file to the
# target file. This is useful to be run after the TRANSLATE step, so that
# changed translations can be easily spotted in a diff view (e.g. git diff).
#runModes=REFORMAT

########################################################################
# Logging Configuration
########################################################################
# log level
logging.level.com.tle.i18n.translator.step=INFO
#logging.level.com.tle.i18n.translator.util.LocaleUtils=DEBUG
# output log to file
#logging.file.name=somefile.log

########################################################################
# Translation Adapter Configuration
########################################################################

# Available adapters:
# - Manual
#   - Manual adapter used for testing purposes
# - OpenAI
#   - Uses OpenAI ChatCompletion API to translate texts
# - DeepL
#   - Uses DeepL API to translate texts
# - Ollama
#   - Uses Ollama API to translate texts
#
# Must be specified in application.properties or as runtime parameter
# When using local.properties, it must be passed in with --spring.config.location=src/main/resources/local.properties
#translation.adapter=OpenAI

# Maximum number of attempts to translate a text
# Adapters may have their own limits which can be lower than this value
translation.adapter.maxAttempts=4

# Path to context messages file.
# A context messages file can contain additional user+assistant messages which are sent with every API request.
# Supported translation adapters will include the messages in their API requests in the following order
# - System Message
# - Context Messages
# - History Messages
# Note: When using OpenAI, this can increase the cost by a lot.
#translation.adapter.contextMessagesFilePath=config/context/context-messages-de.json

# Maximum number of past messages to be included in the API request.
# Should be a multiple of 2 (to include always the translation request and translated response).
# Supported translation adapters will include the messages in their API requests in the following order
# - System Message
# - Context Messages
# - History Messages
# Note: When using OpenAI, this can increase the cost by a lot.
#translation.adapter.maxHistorySize=0

############
# DeepL
############
#translation.adapter.deepl.apiKey=
#translation.adapter.deepl.proTier=false
#translation.adapter.deepl.sourceLanguage=EN
#translation.adapter.deepl.targetLanguage=DE
#translation.adapter.deepl.formality=less
#translation.adapter.deepl.glossaryId=

############
# OpenAI adapter settings
############
#translation.adapter.openai.apiKey=
#translation.adapter.translation.openai.chat.model=gpt-4-turbo-preview
#translation.adapter.openai.chat.maxTokens=4000

# Start with a low temperature and increase it with each attempt
#translation.adapter.openai.chat.initTemperature=0.2
#translation.adapter.openai.chat.temperatureIncrement=0.6

# System message for ChatCompletion API
#translation.adapter.openai.chat.systemMessage=Translate the input text to ${targetLanguage}. If you can not translate the input, or you are unsure, respond with <ERROR>.

############
# Ollama adapter settings
############
#translation.adapter.ollama.scheme=http
#translation.adapter.ollama.host=localhost
#translation.adapter.ollama.port=11434
#translation.adapter.ollama.model=llama3:instruct
#translation.adapter.ollama.chat.systemMessage=Translate the input text to ${targetLanguage}. If you can not translate the input, or you are unsure, respond with <ERROR>.

########################################################################
# Validation Adapter Configuration
########################################################################
#validation.adapter=Default
#validation.adapter.configurationFile=default.json
